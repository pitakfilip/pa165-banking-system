openapi: 3.0.1
info:
  title: Pa165 Project Banking Application Account Query
  description: |
    Hand-made OpenAPI document.
  version: 1.0.0
servers:
  - url: "http://localhost:8080"
tags:
  - name: User
    description: Service to be used by employee of the bank
  - name: Account
    description: Service to be used by customer of bank

components:
  schemas:
    UserTypeDto:
      type: string
      enum: [ REGULAR, EMPLOYEE ]

    NewUserDto:
      title: New bank user
      description: A object representing a new bank user for creation
      required:
        - email
        - password
        - firstName
        - lastName
        - userType
      properties:
        email:
          type: string
          format: email
          description: unused user email
        password:
          type: string
          format: password
          description: password used to log in user
        firstName:
          type: string
          description: user's first name
        lastName:
          type: string
          description: user's last name
        userType:
          $ref: '#/components/schemas/UserTypeDto'

    UserDto:
      title: Bank user
      description: A object representing a bank user
      required:
        - id
        - email
        - password
        - firstName
        - lastName
        - userType
      properties:
        id:
          type: integer
          format: int64
          description: unique user id
        email:
          type: string
          format: email
          description: unused user email
        password:
          type: string
          format: password
          description: password used to log in user
        firstName:
          type: string
          description: user's first name
        lastName:
          type: string
          description: user's last name
        userType:
          $ref: '#/components/schemas/UserTypeDto'

    AccountTypeDto:
      type: string
      enum: [ SPENDING, SAVING, CREDIT ]

    NewAccountDto:
      title: An account
      description: Bank account of registered bank user
      properties:
        userId:
          type: integer
          format: int64
        type:
          $ref: '#/components/schemas/AccountTypeDto'
        maxSpendingLimit:
          type: integer
          description: max limit of one transaction from this account
        currency:
          type: string
          description: account money currency

    AccountDto:
      title: An account
      description: Bank account of registered bank user
      properties:
        id:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
        type:
          $ref: '#/components/schemas/AccountTypeDto'
        maxSpendingLimit:
          type: integer
          description: max limit of one transaction from this account
        currency:
          type: string
          description: account money currency

    ScheduledPaymentDto:
      title: Scheduled payment
      description: Scheduled payment
      required:
        - id
        - senderAccountId
        - receiverAccountId
        - amount
      properties:
        id:
          type: integer
          format: int64
          description: unique id of this scheduled payment
        senderAccountId:
          type: integer
          format: int64
          description: unique id of the sender account
        receiverAccountId:
          type: integer
          format: int64
          description: unique id of the receiver account
        amount:
          type: integer
          description: amount of money to send

    ScheduledPaymentsDto:
      title: List of Scheduled payments
      description: List of Scheduled payments
      properties:
        scheduledPayments:
          type: array
          items:
            $ref: '#/components/schemas/ScheduledPaymentDto'

paths:

  /user:
    get:
      tags:
        - User
      summary: find a user with given id
      operationId: findUserById
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'
        "400":
          description: NOK

    post:
      tags:
        - User
      summary: creates a user
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUserDto'
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'
        "400":
          description: NOK


  /account:
    get:
      tags:
        - Account
      summary: get an account with given id
      operationId: findAccountById
      parameters:
        - name: accountId
          in: header
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDto'
        "400":
          description: NOK
    post:
      tags:
        - Account
      summary: create new user account
      operationId: createAccount
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewAccountDto'
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDto'
        "400":
          description: NOK

  /account/scheduled:
    get:
      tags:
        - Account
      summary: get scheduled payments of an account
      operationId: getScheduledPayments
      parameters:
        - name: accountNumber
          in: header
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledPaymentsDto'
        "400":
          description: NOK
    post:
      tags:
        - Account
      summary: create scheduled payment
      operationId: schedulePayment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduledPaymentDto'
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledPaymentDto'
        "400":
          description: NOK
